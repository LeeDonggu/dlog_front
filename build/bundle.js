!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=19)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){e.exports=n(14)()},,function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(17);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return a(i(e,t),t)},e.exports.tokensToFunction=a,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,l=0,a="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(a+=e.slice(l,p),l=p+f.length,d)a+=d[1];else{var h=e[l],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];a&&(r.push(a),a="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,E="?"===b||"*"===b,T=n[2]||s,S=y||g;r.push({name:v||i++,prefix:m||"",delimiter:T,optional:E,repeat:k,partial:x,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(T)+"]+?"})}}return l<e.length&&(a+=e.substr(l)),a&&r.push(a),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function a(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",a=t||{},u=(o||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=a[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,l="",a=0;a<e.length;a++){var c=e[a];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=l.slice(-h.length)===h;return o||(l=(m?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+l,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=l(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){a=r(n);for(var f=0;f<a.length;f++)i.call(n,a[f])&&(u[a[f]]=n[a[f]])}}return u}},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(11)},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(16))},function(e,t,n){"use strict";var r=n(6),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?l:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var a=u(t),m=u(n),v=0;v<l.length;++v){var y=l[v];if(!(i[y]||r&&r[y]||m&&m[y]||a&&a[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function x(){}function k(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var E=k.prototype=new x;E.constructor=k,r(E,w.prototype),E.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:T.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function R(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function z(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+I(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(a=t[c],c);u+=e(a,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+I(a,c++),r,o);else if("object"===a)throw r=""+t,Error(y(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),M(e,F,t=R(t,i,r,o)),z(t)}var A={current:null};function U(){var e=A.current;if(null===e)throw Error(y(321));return e}var j={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,L,t=R(null,null,t,n)),z(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(y(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=k,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=T.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,n){return U().useReducer(e,t,n)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),i=n(12);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var h=null,m=null,v=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,o,i,a,d,h){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var m=c;u=!1,c=null,s||(s=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var g=null,b={};function w(){if(g)for(var e in b){var t=b[e],n=g.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!k[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in k[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&x(c[o],a,u);o=!0}else i.registrationName?(x(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function x(e,t,n){if(T[e])throw Error(l(100,e));T[e]=t,S[e]=t.eventTypes[n].dependencies}var k=[],E={},T={},S={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,O=null,N=null;function R(e){if(e=m(e)){if("function"!=typeof _)throw Error(l(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function z(e){O?N?N.push(e):N=[e]:O=e}function M(){if(O){var e=O,t=N;if(N=O=null,R(e),t)for(e=0;e<t.length;e++)R(t[e])}}function I(e,t){return e(t)}function L(e,t,n,r,o){return e(t,n,r,o)}function F(){}var D=I,A=!1,U=!1;function j(){null===O&&null===N||(F(),M())}function $(e,t,n){if(U)return e(t,n);U=!0;try{return D(e,t,n)}finally{U=!1,j()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,H={},B={};function Q(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new Q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new Q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new Q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new Q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new Q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new Q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new Q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new Q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new Q(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new Q(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new Q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new Q(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function G(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!W.call(B,e)||!W.call(H,e)&&(V.test(e)?B[e]=!0:(H[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,ne=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,oe=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,le=Z?Symbol.for("react.context"):60110,ae=Z?Symbol.for("react.concurrent_mode"):60111,ue=Z?Symbol.for("react.forward_ref"):60112,ce=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ve(e.type);n=null,r&&(n=ve(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function xe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&G(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function ze(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",Le="http://www.w3.org/2000/svg";function Fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function De(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ae,Ue=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Le||"innerHTML"in e)e.innerHTML=t;else{for((Ae=Ae||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ae.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function je(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ve={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},We={},He={};function Be(e){if(We[e])return We[e];if(!Ve[e])return e;var t,n=Ve[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return We[e]=n[t];return e}P&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var Qe=Be("animationend"),Ke=Be("animationiteration"),qe=Be("animationstart"),Ye=Be("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ge=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Ge.get(e);return void 0===t&&(t=new Map,Ge.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(l(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,lt),it)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<k.length;u++){var c=k[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=rt(a,c))}at(a)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var mt,vt,yt,gt=!1,bt=[],wt=null,xt=null,kt=null,Et=new Map,Tt=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":xt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Nt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&(null!==(t=_n(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function Rt(e){var t=Pn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){zt(e)&&n.delete(t)}function It(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&mt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&zt(wt)&&(wt=null),null!==xt&&zt(xt)&&(xt=null),null!==kt&&zt(kt)&&(kt=null),Et.forEach(Mt),Tt.forEach(Mt)}function Lt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Ft(e){function t(t){return Lt(t,e)}if(0<bt.length){Lt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Lt(wt,e),null!==xt&&Lt(xt,e),null!==kt&&Lt(kt,e),Et.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Rt(n),null===n.blockedOn&&St.shift()}var Dt={},At=new Map,Ut=new Map,jt=["abort","abort",Qe,"animationEnd",Ke,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Ut.set(r,t),At.set(r,i),Dt[o]=i}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(jt,2);for(var Vt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Wt=0;Wt<Vt.length;Wt++)Ut.set(Vt[Wt],0);var Ht=i.unstable_UserBlockingPriority,Bt=i.unstable_runWithPriority,Qt=!0;function Kt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Ut.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){A||F();var o=Gt,i=A;A=!0;try{L(o,e,t,n,r)}finally{(A=i)||j()}}function Xt(e,t,n,r){Bt(Ht,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Qt)if(0<bt.length&&-1<Ct.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var o=Jt(e,t,n,r);if(null===o)Ot(e,r);else if(-1<Ct.indexOf(e))e=_t(o,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=Nt(wt,e,t,n,r,o),!0;case"dragenter":return xt=Nt(xt,e,t,n,r,o),!0;case"mouseover":return kt=Nt(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,Nt(Et.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Tt.set(i,Nt(Tt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{$(pt,e)}finally{ft(e)}}}}function Jt(e,t,n,r){if(null!==(n=Pn(n=ut(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{$(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=Ie;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,vn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function xn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+En,Sn="__reactEventHandlers$"+En,Cn="__reactContainere$"+En;function Pn(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[Tn])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[Tn]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Nn(e){return e[Sn]||null}function Rn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function zn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Mn(e,t,n){(t=zn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Rn(t);for(t=n.length;0<t--;)Mn(n[t],"captured",e);for(t=0;t<n.length;t++)Mn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=zn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Fn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Dn(e){ot(e,In)}var An=null,Un=null,jn=null;function $n(){if(jn)return jn;var e,t,n=Un,r=n.length,o="value"in An?An.value:An.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return jn=o.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function Wn(){return!1}function Hn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Wn,this.isPropagationStopped=Wn,this}function Bn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Bn,e.release=Qn}o(Hn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Wn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wn,this._dispatchInstances=this._dispatchListeners=null}}),Hn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Hn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Hn);var qn=Hn.extend({data:null}),Yn=Hn.extend({data:null}),Xn=[9,13,27,32],Gn=P&&"CompositionEvent"in window,Jn=null;P&&"documentMode"in document&&(Jn=document.documentMode);var Zn=P&&"TextEvent"in window&&!Jn,er=P&&(!Gn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var lr=!1;var ar={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Gn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else lr?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(lr||i!==nr.compositionStart?i===nr.compositionEnd&&lr&&(o=$n()):(Un="value"in(An=r)?An.value:An.textContent,lr=!0)),i=qn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Dn(i),o=i):o=null,(e=Zn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(lr)return"compositionend"===e||!Gn&&or(e,t)?(e=$n(),jn=Un=An=null,lr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,Dn(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Hn.getPooled(sr.change,e,t,n)).type="change",z(n),Dn(e),e}var dr=null,pr=null;function hr(e){at(e)}function mr(e){if(xe(On(e)))return e}function vr(e,t){if("change"===e)return t}var yr=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&mr(pr))if(e=fr(pr,e,ut(e)),A)at(e);else{A=!0;try{I(hr,e)}finally{A=!1,j()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&gr()}function xr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function kr(e,t){if("click"===e)return mr(t)}function Er(e,t){if("input"===e||"change"===e)return mr(t)}P&&(yr=ct("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:sr,_isInputEventSupported:yr,extractEvents:function(e,t,n,r){var o=t?On(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=vr;else if(cr(o))if(yr)l=Er;else{l=xr;var a=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=kr);if(l&&(l=l(e,t)))return fr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Pe(o,"number",o.value)}},Sr=Hn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function _r(){return Pr}var Or=0,Nr=0,Rr=!1,zr=!1,Mr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Rr?"mousemove"===e.type?e.screenX-t:0:(Rr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Nr;return Nr=e.screenY,zr?"mousemove"===e.type?e.screenY-t:0:(zr=!0,0)}}),Ir=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Fr={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l)?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null;if(l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Mr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ir,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:On(l),i=null==t?i:On(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Rn(e))l++;for(e=0,t=c;t;t=Rn(t))e++;for(;0<l-e;)a=Rn(a),l--;for(;0<e-l;)c=Rn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Rn(a),c=Rn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Rn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Rn(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Dr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ar=Object.prototype.hasOwnProperty;function Ur(e,t){if(Dr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ar.call(t,n[r])||!Dr(e[n[r]],t[n[r]]))return!1;return!0}var jr=P&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,Wr=null,Hr=null,Br=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Br||null==Vr||Vr!==sn(n)?null:("selectionStart"in(n=Vr)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hr&&Ur(Hr,n)?null:(Hr=n,(e=Hn.getPooled($r.select,Wr,e,t)).type="select",e.target=Vr,Dn(e),e))}var Kr={eventTypes:$r,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=S.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?On(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Vr=o,Wr=t,Hr=null);break;case"blur":Hr=Wr=Vr=null;break;case"mousedown":Br=!0;break;case"contextmenu":case"mouseup":case"dragend":return Br=!1,Qr(n,r);case"selectionchange":if(jr)break;case"keydown":case"keyup":return Qr(n,r)}return null}},qr=Hn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Hn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Sr.extend({relatedTarget:null});function Gr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Gr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Mr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ro=Hn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Dt,extractEvents:function(e,t,n,r){var o=At.get(e);if(!o)return null;switch(e){case"keypress":if(0===Gr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case Qe:case Ke:case qe:e=qr;break;case Ye:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Hn}return Dn(t=e.getPooled(o,t,n,r)),t}};if(g)throw Error(l(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=Nn,m=_n,v=On,C({SimpleEventPlugin:io,EnterLeaveEventPlugin:Fr,ChangeEventPlugin:Tr,SelectEventPlugin:Kr,BeforeInputEventPlugin:ar});var lo=[],ao=-1;function uo(e){0>ao||(e.current=lo[ao],lo[ao]=null,ao--)}function co(e,t){ao++,lo[ao]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},ho=so;function mo(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function vo(e){return null!=(e=e.childContextTypes)}function yo(){uo(po),uo(fo)}function go(e,t,n){if(fo.current!==so)throw Error(l(168));co(fo,t),co(po,n)}function bo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ve(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,ho=fo.current,co(fo,e),co(po,po.current),!0}function xo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=bo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var ko=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,To=i.unstable_cancelCallback,So=i.unstable_requestPaint,Co=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,_o=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,No=i.unstable_NormalPriority,Ro=i.unstable_LowPriority,zo=i.unstable_IdlePriority,Mo={},Io=i.unstable_shouldYield,Lo=void 0!==So?So:function(){},Fo=null,Do=null,Ao=!1,Uo=Co(),jo=1e4>Uo?Co:function(){return Co()-Uo};function $o(){switch(Po()){case _o:return 99;case Oo:return 98;case No:return 97;case Ro:return 96;case zo:return 95;default:throw Error(l(332))}}function Vo(e){switch(e){case 99:return _o;case 98:return Oo;case 97:return No;case 96:return Ro;case 95:return zo;default:throw Error(l(332))}}function Wo(e,t){return e=Vo(e),ko(e,t)}function Ho(e,t,n){return e=Vo(e),Eo(e,t,n)}function Bo(e){return null===Fo?(Fo=[e],Do=Eo(_o,Ko)):Fo.push(e),Mo}function Qo(){if(null!==Do){var e=Do;Do=null,To(e)}Ko()}function Ko(){if(!Ao&&null!==Fo){Ao=!0;var e=0;try{var t=Fo;Wo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),Eo(_o,Qo),t}finally{Ao=!1}}}function qo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Yo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Xo={current:null},Go=null,Jo=null,Zo=null;function ei(){Zo=Jo=Go=null}function ti(e){var t=Xo.current;uo(Xo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Go=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Nl=!0),e.firstContext=null)}function oi(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Go)throw Error(l(308));Jo=t,Go.dependencies={expirationTime:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ii=!1;function li(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&ai(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=a))}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var h=u;;){if((a=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=c):p=p.next=m,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),iu(a,h.suspenseConfig);e:{var v=e,y=h;switch(a=t,m=n,y.tag){case 1:if("function"==typeof(v=y.payload)){c=v.call(m,c,a);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(a="function"==typeof(v=y.payload)?v.call(m,c,a):v))break e;c=o({},c,a);break e;case 2:ii=!0}}null!==h.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[h]:a.push(h))}if(null===(h=h.next)||h===u){if(null===(a=i.shared.pending))break;h=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,lu(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var pi=X.ReactCurrentBatchConfig,hi=(new r.Component).refs;function mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Qa(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),qa(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Qa(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),qa(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Qa(),r=pi.suspense;(r=ui(n=Ka(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),qa(e,n)}};function yi(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!Ur(n,r)||!Ur(o,i))}function gi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=vo(t)?ho:fo.current,i=(r=null!=(r=t.contextTypes))?mo(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function bi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=hi,li(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=vo(t)?ho:fo.current,o.context=mo(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&vi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var xi=Array.isArray;function ki(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===hi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ti(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ki(e,t,n),r.return=e,r):((r=Pu(n.type,n.key,n.props,null,e.mode,r)).ref=ki(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=_u(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Pu(t.type,t.key,t.props,null,e.mode,n)).ref=ki(e,null,t),n.return=e,n;case te:return(t=Nu(t,e.mode,n)).return=e,t}if(xi(t)||me(t))return(t=_u(t,e.mode,n,null)).return=e,t;Ei(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(xi(n)||me(n))return null!==o?null:f(e,t,n,r,null);Ei(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(xi(r)||me(r))return f(t,e=e.get(n)||null,r,o,null);Ei(t,r)}return null}function m(o,l,a,u){for(var c=null,s=null,f=l,m=l=0,v=null;null!==f&&m<a.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,a[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),l=i(y,l,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===a.length)return n(o,f),c;if(null===f){for(;m<a.length;m++)null!==(f=d(o,a[m],u))&&(l=i(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<a.length;m++)null!==(v=h(f,o,m,a[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=i(v,l,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,a,u,c){var s=me(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=a,v=a=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(a=i(g,a,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),a=i(g,a,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=ki(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=_u(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Pu(i.type,i.key,i.props,null,e.mode,u)).ref=ki(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Nu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ou(i,e.mode,u)).return=e,e=r),a(e);if(xi(i))return m(e,r,i,u);if(me(i))return v(e,r,i,u);if(s&&Ei(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ti(!0),Ci=Ti(!1),Pi={},_i={current:Pi},Oi={current:Pi},Ni={current:Pi};function Ri(e){if(e===Pi)throw Error(l(174));return e}function zi(e,t){switch(co(Ni,t),co(Oi,e),co(_i,Pi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:De(null,"");break;default:t=De(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(_i),co(_i,t)}function Mi(){uo(_i),uo(Oi),uo(Ni)}function Ii(e){Ri(Ni.current);var t=Ri(_i.current),n=De(t,e.type);t!==n&&(co(Oi,e),co(_i,n))}function Li(e){Oi.current===e&&(uo(_i),uo(Oi))}var Fi={current:0};function Di(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ai(e,t){return{responder:e,props:t}}var Ui=X.ReactCurrentDispatcher,ji=X.ReactCurrentBatchConfig,$i=0,Vi=null,Wi=null,Hi=null,Bi=!1;function Qi(){throw Error(l(321))}function Ki(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Dr(e[n],t[n]))return!1;return!0}function qi(e,t,n,r,o,i){if($i=i,Vi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ui.current=null===e||null===e.memoizedState?yl:gl,e=n(r,o),t.expirationTime===$i){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Hi=Wi=null,t.updateQueue=null,Ui.current=bl,e=n(r,o)}while(t.expirationTime===$i)}if(Ui.current=vl,t=null!==Wi&&null!==Wi.next,$i=0,Hi=Wi=Vi=null,Bi=!1,t)throw Error(l(300));return e}function Yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Hi?Vi.memoizedState=Hi=e:Hi=Hi.next=e,Hi}function Xi(){if(null===Wi){var e=Vi.alternate;e=null!==e?e.memoizedState:null}else e=Wi.next;var t=null===Hi?Vi.memoizedState:Hi.next;if(null!==t)Hi=t,Wi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Wi=e).memoizedState,baseState:Wi.baseState,baseQueue:Wi.baseQueue,queue:Wi.queue,next:null},null===Hi?Vi.memoizedState=Hi=e:Hi=Hi.next=e}return Hi}function Gi(e,t){return"function"==typeof t?t(e):t}function Ji(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Wi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<$i){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Vi.expirationTime&&(Vi.expirationTime=s,lu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Dr(r,t.memoizedState)||(Nl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Dr(i,t.memoizedState)||(Nl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function el(e){var t=Yi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Gi,lastRenderedState:e}).dispatch=ml.bind(null,Vi,e),[t.memoizedState,e]}function tl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Vi.updateQueue)?(t={lastEffect:null},Vi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function nl(){return Xi().memoizedState}function rl(e,t,n,r){var o=Yi();Vi.effectTag|=e,o.memoizedState=tl(1|t,n,void 0,void 0===r?null:r)}function ol(e,t,n,r){var o=Xi();r=void 0===r?null:r;var i=void 0;if(null!==Wi){var l=Wi.memoizedState;if(i=l.destroy,null!==r&&Ki(r,l.deps))return void tl(t,n,i,r)}Vi.effectTag|=e,o.memoizedState=tl(1|t,n,i,r)}function il(e,t){return rl(516,4,e,t)}function ll(e,t){return ol(516,4,e,t)}function al(e,t){return ol(4,2,e,t)}function ul(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function cl(e,t,n){return n=null!=n?n.concat([e]):null,ol(4,2,ul.bind(null,t,e),n)}function sl(){}function fl(e,t){return Yi().memoizedState=[e,void 0===t?null:t],e}function dl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function hl(e,t,n){var r=$o();Wo(98>r?98:r,(function(){e(!0)})),Wo(97<r?97:r,(function(){var r=ji.suspense;ji.suspense=void 0===t?null:t;try{e(!1),n()}finally{ji.suspense=r}}))}function ml(e,t,n){var r=Qa(),o=pi.suspense;o={expirationTime:r=Ka(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Vi||null!==i&&i===Vi)Bi=!0,o.expirationTime=$i,Vi.expirationTime=$i;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Dr(a,l))return}catch(e){}qa(e,r)}}var vl={readContext:oi,useCallback:Qi,useContext:Qi,useEffect:Qi,useImperativeHandle:Qi,useLayoutEffect:Qi,useMemo:Qi,useReducer:Qi,useRef:Qi,useState:Qi,useDebugValue:Qi,useResponder:Qi,useDeferredValue:Qi,useTransition:Qi},yl={readContext:oi,useCallback:fl,useContext:oi,useEffect:il,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,rl(4,2,ul.bind(null,t,e),n)},useLayoutEffect:function(e,t){return rl(4,2,e,t)},useMemo:function(e,t){var n=Yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ml.bind(null,Vi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yi().memoizedState=e},useState:el,useDebugValue:sl,useResponder:Ai,useDeferredValue:function(e,t){var n=el(e),r=n[0],o=n[1];return il((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{o(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=el(!1),n=t[0];return t=t[1],[fl(hl.bind(null,t,e),[t,e]),n]}},gl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Ji,useRef:nl,useState:function(){return Ji(Gi)},useDebugValue:sl,useResponder:Ai,useDeferredValue:function(e,t){var n=Ji(Gi),r=n[0],o=n[1];return ll((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{o(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Gi),n=t[0];return t=t[1],[dl(hl.bind(null,t,e),[t,e]),n]}},bl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Zi,useRef:nl,useState:function(){return Zi(Gi)},useDebugValue:sl,useResponder:Ai,useDeferredValue:function(e,t){var n=Zi(Gi),r=n[0],o=n[1];return ll((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{o(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Gi),n=t[0];return t=t[1],[dl(hl.bind(null,t,e),[t,e]),n]}},wl=null,xl=null,kl=!1;function El(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Tl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sl(e){if(kl){var t=xl;if(t){var n=t;if(!Tl(e,t)){if(!(t=xn(n.nextSibling))||!Tl(e,t))return e.effectTag=-1025&e.effectTag|2,kl=!1,void(wl=e);El(wl,n)}wl=e,xl=xn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,kl=!1,wl=e}}function Cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wl=e}function Pl(e){if(e!==wl)return!1;if(!kl)return Cl(e),kl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=xl;t;)El(e,t),t=xn(t.nextSibling);if(Cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){xl=xn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}xl=null}}else xl=wl?xn(e.stateNode.nextSibling):null;return!0}function _l(){xl=wl=null,kl=!1}var Ol=X.ReactCurrentOwner,Nl=!1;function Rl(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Si(t,e.child,n,r)}function zl(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=qi(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Rl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ql(e,t,o))}function Ml(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Su(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Il(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Ur)(o,r)&&e.ref===t.ref)?ql(e,t,i):(t.effectTag|=1,(e=Cu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Il(e,t,n,r,o,i){return null!==e&&Ur(e.memoizedProps,r)&&e.ref===t.ref&&(Nl=!1,o<i)?(t.expirationTime=e.expirationTime,ql(e,t,i)):Fl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Fl(e,t,n,r,o){var i=vo(n)?ho:fo.current;return i=mo(t,i),ri(t,o),n=qi(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Rl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ql(e,t,o))}function Dl(e,t,n,r,o){if(vo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),gi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&bi(t,l,r,c),ii=!1;var d=t.memoizedState;l.state=d,fi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),u=t.memoizedState),(a=ii||yi(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,ai(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Yo(t.type,a),u=l.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&bi(t,l,r,c),ii=!1,u=t.memoizedState,l.state=u,fi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),d=t.memoizedState),(s=ii||yi(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Al(e,t,n,r,i,o)}function Al(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&xo(t,n,!1),ql(e,t,i);r=t.stateNode,Ol.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,a,i)):Rl(e,t,a,i),t.memoizedState=r.state,o&&xo(t,n,!0),t.child}function Ul(e){var t=e.stateNode;t.pendingContext?go(0,t.pendingContext,t.pendingContext!==t.context):t.context&&go(0,t.context,!1),zi(e,t.containerInfo)}var jl,$l,Vl,Wl={dehydrated:null,retryTime:0};function Hl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Fi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),co(Fi,1&l),null===e){if(void 0!==i.fallback&&Sl(t),a){if(a=i.fallback,(i=_u(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Wl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Wl,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=_u(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Wl,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function Bl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Ql(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Kl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Fi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bl(e,n);else if(19===e.tag)Bl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Fi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Di(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ql(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Di(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ql(t,!0,n,null,i,t.lastEffect);break;case"together":Ql(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ql(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&lu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Yl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vo(t.type)&&yo(),null;case 3:return Mi(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Pl(t)||(t.effectTag|=4),null;case 5:Li(t),n=Ri(Ni.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Ri(_i.current),Pl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Tn]=t,r[Sn]=a,i){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)Kt(Xe[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Ee(r,a),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":Re(r,a),Kt("invalid",r),un(n,"onChange")}for(var u in on(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):T.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),Me(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Fe(i)),e===an?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Tn]=t,e[Sn]=r,jl(e,t),t.stateNode=e,u=ln(i,r),i){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)Kt(Xe[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":Ee(e,r),c=ke(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":Re(e,r),c=Ne(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?nn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Ue(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&je(e,f):"number"==typeof f&&je(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(T.hasOwnProperty(a)?null!=f&&un(n,a):null!=f&&G(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}yn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Vl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Ri(Ni.current),Ri(_i.current),Pl(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return uo(Fi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Pl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fi.current)?Pa===wa&&(Pa=xa):(Pa!==wa&&Pa!==xa||(Pa=ka),0!==za&&null!==Ta&&(Mu(Ta,Ca),Iu(Ta,za)))),(n||r)&&(t.effectTag|=4),null);case 4:return Mi(),null;case 10:return ti(t),null;case 17:return vo(t.type)&&yo(),null;case 19:if(uo(Fi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)Yl(r,!1);else if(Pa!==wa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Di(a))){for(t.effectTag|=64,Yl(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return co(Fi,1&Fi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Di(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Yl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*jo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Yl(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=jo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=jo(),n.sibling=null,t=Fi.current,co(Fi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Gl(e){switch(e.tag){case 1:vo(e.type)&&yo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Mi(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return uo(Fi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(Fi),null;case 4:return Mi(),null;case 10:return ti(e),null;default:return null}}function Jl(e,t){return{value:e,source:t,stack:ye(t)}}jl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Ri(_i.current),e=null,n){case"input":l=ke(c,l),r=ke(c,r),e=[];break;case"option":l=_e(c,l),r=_e(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(a in on(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(T.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(T.hasOwnProperty(a)?(null!=s&&un(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Vl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Zl="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ye(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Yo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function oa(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ia(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void oa(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Yo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Ft(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function la(e,t,n){switch("function"==typeof ku&&ku(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){gu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:ta(t);break;case 4:sa(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function ua(e){return 5===e.tag||3===e.tag||4===e.tag}function ca(e){e:{for(var t=e.return;null!==t;){if(ua(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(je(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ua(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sa(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(la(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(la(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ra(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),ln(e,o),t=ln(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?nn(n,u):"dangerouslySetInnerHTML"===a?Ue(n,u):"children"===a?je(n,u):G(n,a,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":ze(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Ft(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ia=jo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void da(t);case 19:return void da(t);case 17:return}throw Error(l(163))}function da(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zl),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pa="function"==typeof WeakMap?WeakMap:Map;function ha(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Fa||(Fa=!0,Da=r),ea(e,t)},n}function ma(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ea(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Aa?Aa=new Set([this]):Aa.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var va,ya=Math.ceil,ga=X.ReactCurrentDispatcher,ba=X.ReactCurrentOwner,wa=0,xa=3,ka=4,Ea=0,Ta=null,Sa=null,Ca=0,Pa=wa,_a=null,Oa=1073741823,Na=1073741823,Ra=null,za=0,Ma=!1,Ia=0,La=null,Fa=!1,Da=null,Aa=null,Ua=!1,ja=null,$a=90,Va=null,Wa=0,Ha=null,Ba=0;function Qa(){return 0!=(48&Ea)?1073741821-(jo()/10|0):0!==Ba?Ba:Ba=1073741821-(jo()/10|0)}function Ka(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Ea))return Ca;if(null!==n)e=qo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=qo(e,150,100);break;case 97:case 96:e=qo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Ta&&e===Ca&&--e,e}function qa(e,t){if(50<Wa)throw Wa=0,Ha=null,Error(l(185));if(null!==(e=Ya(e,t))){var n=$o();1073741823===t?0!=(8&Ea)&&0==(48&Ea)?Za(e):(Ga(e),0===Ea&&Qo()):Ga(e),0==(4&Ea)||98!==n&&99!==n||(null===Va?Va=new Map([[e,t]]):(void 0===(n=Va.get(e))||n>t)&&Va.set(e,t))}}function Ya(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Ta===o&&(lu(t),Pa===ka&&Mu(o,Ca)),Iu(o,t)),o}function Xa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!zu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ga(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Bo(Za.bind(null,e));else{var t=Xa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Qa();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Mo&&To(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Bo(Za.bind(null,e)):Ho(r,Ja.bind(null,e),{timeout:10*(1073741821-t)-jo()}),e.callbackNode=t}}}function Ja(e,t){if(Ba=0,t)return Lu(e,t=Qa()),Ga(e),null;var n=Xa(e);if(0!==n){if(t=e.callbackNode,0!=(48&Ea))throw Error(l(327));if(mu(),e===Ta&&n===Ca||nu(e,n),null!==Sa){var r=Ea;Ea|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),Ea=r,ga.current=o,1===Pa)throw t=_a,nu(e,n),Mu(e,n),Ga(e),t;if(null===Sa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pa,Ta=null,r){case wa:case 1:throw Error(l(345));case 2:Lu(e,2<n?2:n);break;case xa:if(Mu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Oa&&10<(o=Ia+500-jo())){if(Ma){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Xa(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),o);break}du(e);break;case ka:if(Mu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Ma&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Xa(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Na?r=10*(1073741821-Na)-jo():1073741823===Oa?r=0:(r=10*(1073741821-Oa)-5e3,0>(r=(o=jo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ya(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Oa&&null!==Ra){i=Oa;var a=Ra;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=jo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Mu(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(l(329))}if(Ga(e),e.callbackNode===t)return Ja.bind(null,e)}}return null}function Za(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Ea))throw Error(l(327));if(mu(),e===Ta&&t===Ca||nu(e,t),null!==Sa){var n=Ea;Ea|=16;for(var r=ou();;)try{au();break}catch(t){ru(e,t)}if(ei(),Ea=n,ga.current=r,1===Pa)throw n=_a,nu(e,t),Mu(e,t),Ga(e),n;if(null!==Sa)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Ta=null,du(e),Ga(e)}return null}function eu(e,t){var n=Ea;Ea|=1;try{return e(t)}finally{0===(Ea=n)&&Qo()}}function tu(e,t){var n=Ea;Ea&=-2,Ea|=8;try{return e(t)}finally{0===(Ea=n)&&Qo()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sa)for(n=Sa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&yo();break;case 3:Mi(),uo(po),uo(fo);break;case 5:Li(r);break;case 4:Mi();break;case 13:case 19:uo(Fi);break;case 10:ti(r)}n=n.return}Ta=e,Sa=Cu(e.current,null),Ca=t,Pa=wa,_a=null,Na=Oa=1073741823,Ra=null,za=0,Ma=!1}function ru(e,t){for(;;){try{if(ei(),Ui.current=vl,Bi)for(var n=Vi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($i=0,Hi=Wi=Vi=null,Bi=!1,null===Sa||null===Sa.return)return Pa=1,_a=t,Sa=null;e:{var o=e,i=Sa.return,l=Sa,a=t;if(t=Ca,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Fi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(d){var m=f.updateQueue;if(null===m){var v=new Set;v.add(u),f.updateQueue=v}else m.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ui(1073741823,null);y.tag=2,ci(l,y)}l.expirationTime=1073741823;break e}a=void 0,l=t;var g=o.pingCache;if(null===g?(g=o.pingCache=new pa,a=new Set,g.set(u,a)):void 0===(a=g.get(u))&&(a=new Set,g.set(u,a)),!a.has(l)){a.add(l);var b=bu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ve(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(l))}5!==Pa&&(Pa=2),a=Jl(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,si(f,ha(f,u,t));break e;case 1:u=a;var w=f.type,x=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Aa||!Aa.has(x)))){f.effectTag|=4096,f.expirationTime=t,si(f,ma(f,u,t));break e}}f=f.return}while(null!==f)}Sa=su(Sa)}catch(e){t=e;continue}break}}function ou(){var e=ga.current;return ga.current=vl,null===e?vl:e}function iu(e,t){e<Oa&&2<e&&(Oa=e),null!==t&&e<Na&&2<e&&(Na=e,Ra=t)}function lu(e){e>za&&(za=e)}function au(){for(;null!==Sa;)Sa=cu(Sa)}function uu(){for(;null!==Sa&&!Io();)Sa=cu(Sa)}function cu(e){var t=va(e.alternate,e,Ca);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),ba.current=null,t}function su(e){Sa=e;do{var t=Sa.alternate;if(e=Sa.return,0==(2048&Sa.effectTag)){if(t=Xl(t,Sa,Ca),1===Ca||1!==Sa.childExpirationTime){for(var n=0,r=Sa.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sa.firstEffect),null!==Sa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sa.firstEffect),e.lastEffect=Sa.lastEffect),1<Sa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sa:e.firstEffect=Sa,e.lastEffect=Sa))}else{if(null!==(t=Gl(Sa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sa.sibling))return t;Sa=e}while(null!==Sa);return Pa===wa&&(Pa=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=$o();return Wo(99,pu.bind(null,e,t)),null}function pu(e,t){do{mu()}while(null!==ja);if(0!=(48&Ea))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Ta&&(Sa=Ta=null,Ca=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Ea;Ea|=32,ba.current=null,mn=Qt;var a=pn();if(hn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,h=-1,m=0,v=0,y=a,g=null;t:for(;;){for(var b;y!==u||0!==s&&3!==y.nodeType||(p=d+s),y!==f||0!==c&&3!==y.nodeType||(h=d+c),3===y.nodeType&&(d+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===a)break t;if(g===u&&++m===s&&(p=d),g===f&&++v===c&&(h=d),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,La=o;do{try{hu()}catch(e){if(null===La)throw Error(l(330));gu(La,e),La=La.nextEffect}}while(null!==La);La=o;do{try{for(a=e,u=t;null!==La;){var w=La.effectTag;if(16&w&&je(La.stateNode,""),128&w){var x=La.alternate;if(null!==x){var k=x.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&w){case 2:ca(La),La.effectTag&=-3;break;case 6:ca(La),La.effectTag&=-3,fa(La.alternate,La);break;case 1024:La.effectTag&=-1025;break;case 1028:La.effectTag&=-1025,fa(La.alternate,La);break;case 4:fa(La.alternate,La);break;case 8:sa(a,s=La,u),aa(s)}La=La.nextEffect}}catch(e){if(null===La)throw Error(l(330));gu(La,e),La=La.nextEffect}}while(null!==La);if(k=vn,x=pn(),w=k.focusedElem,u=k.selectionRange,x!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&hn(w)&&(x=u.start,void 0===(k=u.end)&&(k=x),"selectionStart"in w?(w.selectionStart=x,w.selectionEnd=Math.min(k,w.value.length)):(k=(x=w.ownerDocument||document)&&x.defaultView||window).getSelection&&(k=k.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!k.extend&&a>u&&(s=u,u=a,a=s),s=dn(w,a),f=dn(w,u),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((x=x.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),a>u?(k.addRange(x),k.extend(f.node,f.offset)):(x.setEnd(f.node,f.offset),k.addRange(x))))),x=[];for(k=w;k=k.parentNode;)1===k.nodeType&&x.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<x.length;w++)(k=x[w]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!mn,vn=mn=null,e.current=n,La=o;do{try{for(w=e;null!==La;){var E=La.effectTag;if(36&E&&ia(w,La.alternate,La),128&E){x=void 0;var T=La.ref;if(null!==T){var S=La.stateNode;switch(La.tag){case 5:x=S;break;default:x=S}"function"==typeof T?T(x):T.current=x}}La=La.nextEffect}}catch(e){if(null===La)throw Error(l(330));gu(La,e),La=La.nextEffect}}while(null!==La);La=null,Lo(),Ea=i}else e.current=n;if(Ua)Ua=!1,ja=e,$a=t;else for(La=o;null!==La;)t=La.nextEffect,La.nextEffect=null,La=t;if(0===(t=e.firstPendingTime)&&(Aa=null),1073741823===t?e===Ha?Wa++:(Wa=0,Ha=e):Wa=0,"function"==typeof xu&&xu(n.stateNode,r),Ga(e),Fa)throw Fa=!1,e=Da,Da=null,e;return 0!=(8&Ea)||Qo(),null}function hu(){for(;null!==La;){var e=La.effectTag;0!=(256&e)&&na(La.alternate,La),0==(512&e)||Ua||(Ua=!0,Ho(97,(function(){return mu(),null}))),La=La.nextEffect}}function mu(){if(90!==$a){var e=97<$a?97:$a;return $a=90,Wo(e,vu)}}function vu(){if(null===ja)return!1;var e=ja;if(ja=null,0!=(48&Ea))throw Error(l(331));var t=Ea;for(Ea|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ra(5,n),oa(5,n)}}catch(t){if(null===e)throw Error(l(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ea=t,Qo(),!0}function yu(e,t,n){ci(e,t=ha(e,t=Jl(n,t),1073741823)),null!==(e=Ya(e,1073741823))&&Ga(e)}function gu(e,t){if(3===e.tag)yu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){yu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Aa||!Aa.has(r))){ci(n,e=ma(n,e=Jl(t,e),1073741823)),null!==(n=Ya(n,1073741823))&&Ga(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Ta===e&&Ca===n?Pa===ka||Pa===xa&&1073741823===Oa&&jo()-Ia<500?nu(e,Ca):Ma=!0:zu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ga(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ka(t=Qa(),e,null)),null!==(e=Ya(e,t))&&Ga(e)}va=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Nl=!0;else{if(r<n){switch(Nl=!1,t.tag){case 3:Ul(t),_l();break;case 5:if(Ii(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vo(t.type)&&wo(t);break;case 4:zi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Xo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Hl(e,t,n):(co(Fi,1&Fi.current),null!==(t=ql(e,t,n))?t.sibling:null);co(Fi,1&Fi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Kl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Fi,Fi.current),!r)return null}return ql(e,t,n)}Nl=!1}}else Nl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=mo(t,fo.current),ri(t,n),o=qi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,li(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&mi(t,r,a,e),o.updater=vi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Al(null,t,r,!0,i,n)}else t.tag=0,Rl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Yo(o,e),i){case 0:t=Fl(null,t,o,e,n);break e;case 1:t=Dl(null,t,o,e,n);break e;case 11:t=zl(null,t,o,e,n);break e;case 14:t=Ml(null,t,o,Yo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Fl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 3:if(Ul(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ai(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)_l(),t=ql(e,t,n);else{if((o=t.stateNode.hydrate)&&(xl=xn(t.stateNode.containerInfo.firstChild),wl=t,o=kl=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Rl(e,t,r,n),_l();t=t.child}return t;case 5:return Ii(t),null===e&&Sl(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,gn(r,o)?a=null:null!==i&&gn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Rl(e,t,a,n),t=t.child),t;case 6:return null===e&&Sl(t),null;case 13:return Hl(e,t,n);case 4:return zi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,zl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Xo,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0===(i=Dr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!po.current){t=ql(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Rl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Rl(e,t,r,n),t.child;case 14:return i=Yo(o=t.type,t.pendingProps),Ml(e,t,o,i=Yo(o.type,i),r,n);case 15:return Il(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Yo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vo(r)?(e=!0,wo(t)):e=!1,ri(t,n),gi(t,r,o),wi(t,r,o,n),Al(null,t,r,!0,e,n);case 19:return Kl(e,t,n)}throw Error(l(156,t.tag))};var xu=null,ku=null;function Eu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Tu(e,t,n,r){return new Eu(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Su(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return _u(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Tu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Tu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Tu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Tu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function _u(e,t,n,r){return(e=Tu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Tu(6,e,null,t)).expirationTime=n,e}function Nu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ru(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function zu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Mu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Iu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Lu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Fu(e,t,n,r){var o=t.current,i=Qa(),a=pi.suspense;i=Ka(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(vo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(vo(c)){n=bo(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),qa(o,i),i}function Du(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Au(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Uu(e,t){Au(e,t),(e=e.alternate)&&Au(e,t)}function ju(e,t,n){var r=new Ru(e,t,n=null!=n&&!0===n.hydrate),o=Tu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,li(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Ct.forEach((function(e){ht(e,t,n)})),Pt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Du(l);a.call(e)}}Fu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ju(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Du(l);u.call(e)}}tu((function(){Fu(t,l,e,o)}))}return Du(l)}function Wu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Hu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(l(200));return Wu(e,t,null,n)}ju.prototype.render=function(e){Fu(e,this._internalRoot,null,null)},ju.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Fu(null,e,null,(function(){t[Cn]=null}))},mt=function(e){if(13===e.tag){var t=qo(Qa(),150,100);qa(e,t),Uu(e,t)}},vt=function(e){13===e.tag&&(qa(e,3),Uu(e,3))},yt=function(e){if(13===e.tag){var t=Qa();qa(e,t=Ka(t,e,null)),Uu(e,t)}},_=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Nn(r);if(!o)throw Error(l(90));xe(r),Se(r,o)}}}break;case"textarea":ze(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},I=eu,L=function(e,t,n,r,o){var i=Ea;Ea|=4;try{return Wo(98,e.bind(null,t,n,r,o))}finally{0===(Ea=i)&&Qo()}},F=function(){0==(49&Ea)&&(function(){if(null!==Va){var e=Va;Va=null,e.forEach((function(e,t){Lu(t,e),Ga(t)})),Qo()}}(),mu())},D=function(e,t){var n=Ea;Ea|=2;try{return e(t)}finally{0===(Ea=n)&&Qo()}};var Bu,Qu,Ku={Events:[_n,On,Nn,C,E,Dn,function(e){ot(e,Fn)},z,M,Gt,at,mu,{current:!1}]};Qu=(Bu={findFiberByHostInstance:Pn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);xu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},ku=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Bu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Qu?Qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Hu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Ea))throw Error(l(187));var n=Ea;Ea|=1;try{return Wo(99,e.bind(null,t))}finally{Ea=n,Qo()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(l(200));return Vu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(l(200));return Vu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(l(40));return!!e._reactRootContainer&&(tu((function(){Vu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Hu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Vu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,l,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},l=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var y=p.now();t.unstable_now=function(){return p.now()-y}}var g=!1,b=null,w=-1,x=5,k=0;l=function(){return t.unstable_now()>=k},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,T=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();k=e+x;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},o=function(e,n){w=h((function(){e(t.unstable_now())}),n)},i=function(){m(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],R=1,z=null,M=3,I=!1,L=!1,F=!1;function D(e){for(var t=C(N);null!==t;){if(null===t.callback)P(N);else{if(!(t.startTime<=e))break;P(N),t.sortIndex=t.expirationTime,S(O,t)}t=C(N)}}function A(e){if(F=!1,D(e),!L)if(null!==C(O))L=!0,r(U);else{var t=C(N);null!==t&&o(A,t.startTime-e)}}function U(e,n){L=!1,F&&(F=!1,i()),I=!0;var r=M;try{for(D(n),z=C(O);null!==z&&(!(z.expirationTime>n)||e&&!l());){var a=z.callback;if(null!==a){z.callback=null,M=z.priorityLevel;var u=a(z.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?z.callback=u:z===C(O)&&P(O),D(n)}else P(O);z=C(O)}if(null!==z)var c=!0;else{var s=C(N);null!==s&&o(A,s.startTime-n),c=!1}return c}finally{z=null,M=r,I=!1}}function j(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||I||(L=!0,r(U))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:j(e)}else l=j(e),u=a;return e={id:R++,callback:n,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(N,e),null===C(O)&&e===C(N)&&(F?i():F=!0,o(A,u-a))):(e.sortIndex=l,S(O,e),L||I||(L=!0,r(U))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=C(O);return n!==z&&null!==z&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<z.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},function(e,t,n){"use strict";var r=n(15);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,a=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case l:case u:case a:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case y:case v:case c:return e;default:return t}}case i:return t}}}function E(e){return k(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=l,t.Lazy=y,t.Memo=v,t.Portal=i,t.Profiler=u,t.StrictMode=a,t.Suspense=h,t.isAsyncMode=function(e){return E(e)||k(e)===f},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===p},t.isFragment=function(e){return k(e)===l},t.isLazy=function(e){return k(e)===y},t.isMemo=function(e){return k(e)===v},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===u},t.isStrictMode=function(e){return k(e)===a},t.isSuspense=function(e){return k(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===u||e===a||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===x||e.$$typeof===g)},t.typeOf=k},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(7),l=n.n(i);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function d(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var p=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),l=t&&f(t),a=i||l;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),c++):c&&(d(o,s),c--)}if(!a)for(;c--;c)o.unshift("..");!a||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};var h=function(e,t){if(!e)throw new Error("Invariant failed")};function m(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function w(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function x(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}function T(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),k||h(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,l=i.forceRefresh,a=void 0!==l&&l,u=i.getUserConfirmation,c=void 0===u?E:u,f=i.keyLength,d=void 0===f?6:f,p=e.basename?g(m(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=y(i,p)),w(i,r,n)}function S(){return Math.random().toString(36).substr(2,d)}var C=x();function P(e){s(U,e),U.length=n.length,C.notifyListeners(U.location,U.action)}function _(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(v(e.state))}function O(){R(v(T()))}var N=!1;function R(e){if(N)N=!1,P();else{C.confirmTransitionTo(e,"POP",c,(function(t){t?P({action:"POP",location:e}):function(e){var t=U.location,n=M.indexOf(t.key);-1===n&&(n=0);var r=M.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(N=!0,L(o))}(e)}))}}var z=v(T()),M=[z.key];function I(e){return p+b(e)}function L(e){n.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?(window.addEventListener("popstate",_),o&&window.addEventListener("hashchange",O)):0===F&&(window.removeEventListener("popstate",_),o&&window.removeEventListener("hashchange",O))}var A=!1;var U={length:n.length,action:"POP",location:z,createHref:I,push:function(e,t){var o=w(e,t,S(),U.location);C.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=I(o),i=o.key,l=o.state;if(r)if(n.pushState({key:i,state:l},null,t),a)window.location.href=t;else{var u=M.indexOf(U.location.key),c=M.slice(0,u+1);c.push(o.key),M=c,P({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=w(e,t,S(),U.location);C.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=I(o),i=o.key,l=o.state;if(r)if(n.replaceState({key:i,state:l},null,t),a)window.location.replace(t);else{var u=M.indexOf(U.location.key);-1!==u&&(M[u]=o.key),P({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return A||(D(1),A=!0),function(){return A&&(A=!1,D(-1)),t()}},listen:function(e){var t=C.appendListener(e);return D(1),function(){D(-1),t()}}};return U}var C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:m},slash:{encodePath:m,decodePath:m}};function P(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function _(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function O(e){window.location.replace(P(window.location.href)+"#"+e)}function N(e){void 0===e&&(e={}),k||h(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?E:r,i=n.hashType,l=void 0===i?"slash":i,a=e.basename?g(m(e.basename)):"",u=C[l],c=u.encodePath,f=u.decodePath;function d(){var e=f(_());return a&&(e=y(e,a)),w(e)}var p=x();function v(e){s(U,e),U.length=t.length,p.notifyListeners(U.location,U.action)}var T=!1,S=null;function N(){var e,t,n=_(),r=c(n);if(n!==r)O(r);else{var i=d(),l=U.location;if(!T&&(t=i,(e=l).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===b(i))return;S=null,function(e){if(T)T=!1,v();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?v({action:"POP",location:e}):function(e){var t=U.location,n=I.lastIndexOf(b(t));-1===n&&(n=0);var r=I.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(T=!0,L(o))}(e)}))}}(i)}}var R=_(),z=c(R);R!==z&&O(z);var M=d(),I=[b(M)];function L(e){t.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?window.addEventListener("hashchange",N):0===F&&window.removeEventListener("hashchange",N)}var A=!1;var U={length:t.length,action:"POP",location:M,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=P(window.location.href)),n+"#"+c(a+b(e))},push:function(e,t){var n=w(e,void 0,void 0,U.location);p.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=b(n),r=c(a+t);if(_()!==r){S=t,function(e){window.location.hash=e}(r);var o=I.lastIndexOf(b(U.location)),i=I.slice(0,o+1);i.push(t),I=i,v({action:"PUSH",location:n})}else v()}}))},replace:function(e,t){var n=w(e,void 0,void 0,U.location);p.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=b(n),r=c(a+t);_()!==r&&(S=t,O(r));var o=I.indexOf(b(U.location));-1!==o&&(I[o]=t),v({action:"REPLACE",location:n})}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return A||(D(1),A=!0),function(){return A&&(A=!1,D(-1)),t()}},listen:function(e){var t=p.appendListener(e);return D(1),function(){D(-1),t()}}};return U}function R(e,t,n){return Math.min(Math.max(e,t),n)}function z(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,l=void 0===i?0:i,a=t.keyLength,u=void 0===a?6:a,c=x();function f(e){s(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=R(l,0,o.length-1),h=o.map((function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())})),m=b;function v(e){var t=R(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(y.entries[y.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var M=n(3),I=n.n(M),L=n(8),F=n.n(L);function D(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var A=o.a.createContext||function(e,t){var n,o,i="__create-react-context-"+F()()+"__",l=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=D(t.props.value),t}I()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(l=o)?0!==i||1/i==1/l:i!=i&&l!=l)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,l},r.render=function(){return this.props.children},n}(r.Component);l.childContextTypes=((n={})[i]=c.a.object.isRequired,n);var a=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}I()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return a.contextTypes=((o={})[i]=c.a.object,o),{Provider:l,Consumer:a}},U=n(4),j=n.n(U);n(6);function $(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(9);var V=function(e){var t=A();return t.displayName=e,t}("Router"),W=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(V.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;o.a.Component;var H={},B=0;function Q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,l=n.strict,a=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=H[n]||(H[n]={});if(r[e])return r[e];var o=[],i={regexp:j()(e,o,t),keys:o};return B<1e4&&(r[e]=i,B++),i}(n,{end:i,strict:a,sensitive:c}),o=r.regexp,l=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var K=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||h(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Q(n.pathname,e.props):t.match}),i=e.props,l=i.children,a=i.component,u=i.render;return Array.isArray(l)&&0===l.length&&(l=null),o.a.createElement(V.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:a?o.a.createElement(a,r):u?u(r):null:"function"==typeof l?l(r):null)}))},t}(o.a.Component);function q(e){return"/"===e.charAt(0)?e:"/"+e}function Y(e,t){if(!e)return t;var n=q(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function X(e){return"string"==typeof e?e:b(e)}function G(e){return function(){h(!1)}}function J(){}o.a.Component;var Z=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||h(!1);var n,r,i=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?Q(i.pathname,s({},e.props,{path:l})):t.match}})),r?o.a.cloneElement(n,{location:i,computedMatch:r}):null}))},t}(o.a.Component);o.a.useContext;var ee=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return a(t,e),t.prototype.render=function(){return o.a.createElement(W,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var te=function(e,t){return"function"==typeof e?e(t):e},ne=function(e,t){return"string"==typeof e?w(e,null,null,t):e},re=function(e){return e},oe=o.a.forwardRef;void 0===oe&&(oe=re);var ie=oe((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,l=$(e,["innerRef","navigate","onClick"]),a=l.target,u=s({},l,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||a&&"_self"!==a||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=re!==oe&&t||n,o.a.createElement("a",u)}));var le=oe((function(e,t){var n=e.component,r=void 0===n?ie:n,i=e.replace,l=e.to,a=e.innerRef,u=$(e,["component","replace","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||h(!1);var n=e.history,c=ne(te(l,e.location),e.location),f=c?n.createHref(c):"",d=s({},u,{href:f,navigate:function(){var t=te(l,e.location);(i?n.replace:n.push)(t)}});return re!==oe?d.ref=t||a:d.innerRef=a,o.a.createElement(r,d)}))})),ae=function(e){return e},ue=o.a.forwardRef;void 0===ue&&(ue=ae);ue((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,l=void 0===i?"active":i,a=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,d=e.location,p=e.strict,m=e.style,v=e.to,y=e.innerRef,g=$(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||h(!1);var n=d||e.location,i=ne(te(v,n),n),b=i.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),x=w?Q(n.pathname,{path:w,exact:c,strict:p}):null,k=!!(f?f(x,n):x),E=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,l):u,T=k?s({},m,{},a):m,S=s({"aria-current":k&&r||null,className:E,style:T,to:i},g);return ae!==ue?S.ref=t||y:S.innerRef=y,o.a.createElement(le,S)}))}));var ce=function(e){var t=e.children;return o.a.createElement(o.a.Fragment,null,o.a.createElement(le,{to:"/"},o.a.createElement("h1",null,"리액트를 위한 웹팩4")),t)},se=function(){return o.a.createElement(ce,null,o.a.createElement("p",null,"안녕하세요 리액트를 위한 웹팩."),o.a.createElement("p",null,o.a.createElement(le,{to:"/dynamic"},"Dynamic Page로 이동")))},fe=function(){return o.a.createElement(ce,null,o.a.createElement("h2",null,"Dynamic Page"),o.a.createElement("p",null,"코드스플릿팅을 이용한 비동기페이지입니다."))},de=function(){return o.a.createElement(ce,null,o.a.createElement("strong",null,"페이지 없습니다."))},pe=function(){return o.a.createElement(ee,null,o.a.createElement("div",null,o.a.createElement(Z,null,o.a.createElement(K,{exact:!0,path:"/",component:se}),o.a.createElement(K,{exact:!0,path:"/dynamic",component:fe}),o.a.createElement(K,{component:de}))))};l.a.render(o.a.createElement(pe,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0xheW91dC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSG9tZS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRHluYW1pY1BhZ2UuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL05vTWF0Y2guanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0FwcC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwiam9pbiIsInJlcyIsInRva2VucyIsImluZGV4IiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibGVuZ3RoIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwdXNoIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwicmVwbGFjZSIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIkFycmF5IiwiZmxhZ3MiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwic291cmNlIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0IiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImFyZ3VtZW50cyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwiZ2xvYmFsIiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJjb25jYXQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJlIiwiZm9yIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsIkEiLCJCIiwiaXRlcmF0b3IiLCJDIiwiYSIsImIiLCJEIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkUiLCJGIiwidGhpcyIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiRyIsIkgiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJFcnJvciIsImZvcmNlVXBkYXRlIiwiSSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImciLCJrIiwiZiIsImNoaWxkcmVuIiwiaCIsIiQkdHlwZW9mIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlMiLCJWIiwiVCIsIlUiLCJpc0FycmF5IiwiZG9uZSIsImVzY2FwZSIsIlciLCJhYSIsIlgiLCJOIiwiWSIsIloiLCJiYSIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiUmVhY3RDdXJyZW50T3duZXIiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJDb21wb25lbnQiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsImFwcGx5Iiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwiaW5kZXhPZiIsInNhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJ0YSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwidWEiLCJyZWdpc3RyYXRpb25OYW1lIiwidmEiLCJ3YSIsImRlcGVuZGVuY2llcyIsInhhIiwieWEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInRvTG93ZXJDYXNlIiwiVWEiLCJWYSIsInhsaW5rSHJlZiIsIldhIiwiWGEiLCJTYSIsImlzTmFOIiwiVGEiLCJSYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwicWIiLCJ0YWciLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsInJiIiwic2IiLCJub2RlTmFtZSIsInhiIiwiX3ZhbHVlVHJhY2tlciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJGYiIsIkhiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsImhhcyIsInZjIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJzaGlmdCIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYyIsImpkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJrZCIsImxkIiwidHJpbSIsIm1kIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJub2RlIiwibmV4dFNpYmxpbmciLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiRGQiLCJFZCIsIkZkIiwiYXV0b0ZvY3VzIiwiR2QiLCJfX2h0bWwiLCJIZCIsInNldFRpbWVvdXQiLCJJZCIsImNsZWFyVGltZW91dCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJnZSIsImhlIiwiaWUiLCJqZSIsImtlIiwiZG9jdW1lbnRNb2RlIiwibGUiLCJtZSIsIm5lIiwib2UiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwicGUiLCJxZSIsImtleUNvZGUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJzZWxlY3QiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsIm9mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkRmIiwiRWYiLCJGZiIsImdldENoaWxkQ29udGV4dCIsIkdmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJIZiIsIklmIiwiSmYiLCJLZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiTGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJNZiIsInVuc3RhYmxlX25vdyIsIk5mIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJPZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiUGYiLCJRZiIsIlJmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJTZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlRmIiwiVWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInFnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJyZyIsInNnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsImNhbGxiYWNrIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwic3RhdGUiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwicXVldWUiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJzdGFjayIsIkJpIiwiV2Vha1NldCIsIlNldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsImluc3RhbmNlIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlJpIiwiU2kiLCJUaSIsImRpc3BsYXkiLCJVaSIsIlZpIiwiYWRkIiwidGhlbiIsIldpIiwiWGkiLCJlbGVtZW50IiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNlaWwiLCJjaiIsImRqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwidGltZW91dE1zIiwieGoiLCJ5aiIsInpqIiwibGFzdEV4cGlyZWRUaW1lIiwiQWoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIkJqIiwidGltZW91dCIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkRXhwaXJhdGlvblRpbWUiLCJsYXN0U3VzcGVuZGVkVGltZSIsIklqIiwidGltZW91dEhhbmRsZSIsIkpqIiwiYnVzeU1pbkR1cmF0aW9uTXMiLCJidXN5RGVsYXlNcyIsIktqIiwiTWoiLCJOaiIsInBpbmdDYWNoZSIsIk9qIiwidWIiLCJQaiIsIlhjIiwiUWoiLCJTaiIsImZpcnN0U3VzcGVuZGVkVGltZSIsInJhbmdlQ291bnQiLCJ3YiIsImFjdGl2ZUVsZW1lbnREZXRhY2hlZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaiIsIndkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJkZWZhdWx0Iiwib2IiLCJYaiIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlpqIiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwiamsiLCJrayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiWWoiLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlUHJvcHMiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiRnVuY3Rpb24iLCJhcnIiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiUG9ydGFsIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiX2luaGVyaXRzTG9vc2UiLCJfZXh0ZW5kcyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsInNwbGljZU9uZSIsImxpc3QiLCJ1bmRlZmluZWQiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsImZpbHRlciIsIml0ZW0iLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsInZhbHVlcyIsIlJvdXRlIiwiY29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiU3dpdGNoIiwiQnJvd3NlclJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJMYXlvdXQiLCJIb21lIiwiRHluYW1pY1BhZ2UiLCJOb01h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LEdBQUcsS0FDViw0Q0FFRTJGLElDS1FnNEMsR0FWRixXQUNYLE9BQ0Usa0JBQUMsR0FBRCxLQUNFLGdEQUNBLDJCQUNFLGtCQUFDbkIsR0FBRCxDQUFNeDhDLEdBQUcsWUFBVCx1QkNFTzQ5QyxHQVJLLFdBQ2xCLE9BQ0Usa0JBQUMsR0FBRCxLQUNFLDRDQUNBLHVEQ0dTQyxHQVBDLFdBQ2QsT0FDRSxrQkFBQyxHQUFELEtBQ0UsK0NDYVNDLEdBYkgsV0FDVixPQUNFLGtCQUFDLEdBQUQsS0FDRSw2QkFDRSxrQkFBQyxFQUFELEtBQ0Usa0JBQUMsRUFBRCxDQUFPbFEsT0FBSyxFQUFDNXlDLEtBQUssSUFBSTRHLFVBQVcrN0MsS0FDakMsa0JBQUMsRUFBRCxDQUFPL1AsT0FBSyxFQUFDNXlDLEtBQUssV0FBVzRHLFVBQVdnOEMsS0FDeEMsa0JBQUMsRUFBRCxDQUFPaDhDLFVBQVdpOEMsU0NSNUJFLElBQVNoOEMsT0FBTyxrQkFBQyxHQUFELE1BQVNtSyxTQUFTOHhDLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDE5KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBAZmxvd1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGdsb2JhbFtrZXldID0gKGdsb2JhbFtrZXldIHx8IDApICsgMTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMVwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGd1ZCBmcm9tICdndWQnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGd1ZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH07XG5cbiAgICAgIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuXG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gX3RoaXMyO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG52YXIgaW5kZXggPSBSZWFjdC5jcmVhdGVDb250ZXh0IHx8IGNyZWF0ZVJlYWN0Q29udGV4dDtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyXCIpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmhpc3Rvcnk7XG59XG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XG59XG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcbn1cbmZ1bmN0aW9uIHVzZVJvdXRlTWF0Y2gocGF0aCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiBwYXRoID8gbWF0Y2hQYXRoKHVzZUxvY2F0aW9uKCkucGF0aG5hbWUsIHBhdGgpIDogdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWxba2V5XSAmJiBnbG9iYWxba2V5XSAhPT0gXCJlc21cIikge1xuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XG4gIH1cbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB1c2VIaXN0b3J5LCB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zLCB1c2VSb3V0ZU1hdGNoLCB3aXRoUm91dGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXIuanMubWFwXG4iLCJpbXBvcnQgeyBSb3V0ZXIsIF9fUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCAqIGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHByb3BzKTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIExpbmtBbmNob3IuZGlzcGxheU5hbWUgPSBcIkxpbmtBbmNob3JcIjtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cblxudmFyIExpbmsgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmMiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBfcmVmMiRjb21wb25lbnQgPSBfcmVmMi5jb21wb25lbnQsXG4gICAgICBjb21wb25lbnQgPSBfcmVmMiRjb21wb25lbnQgPT09IHZvaWQgMCA/IExpbmtBbmNob3IgOiBfcmVmMiRjb21wb25lbnQsXG4gICAgICByZXBsYWNlID0gX3JlZjIucmVwbGFjZSxcbiAgICAgIHRvID0gX3JlZjIudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYyLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJjb21wb25lbnRcIiwgXCJyZXBsYWNlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeTtcbiAgICB2YXIgbG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKSwgY29udGV4dC5sb2NhdGlvbik7XG4gICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhyZWY6IGhyZWYsXG4gICAgICBuYXZpZ2F0ZTogZnVuY3Rpb24gbmF2aWdhdGUoKSB7XG4gICAgICAgIHZhciBsb2NhdGlvbiA9IHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICAgICAgdmFyIG1ldGhvZCA9IHJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9XG4gICAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgdG9UeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKTtcbiAgdmFyIHJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XG4gIH0pXSk7XG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcbiAgTGluay5wcm9wVHlwZXMgPSB7XG4gICAgaW5uZXJSZWY6IHJlZlR5cGUsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgZm9yd2FyZFJlZlNoaW0kMSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiQxID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmJDEgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiQxID0gZm9yd2FyZFJlZlNoaW0kMTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGNsYXNzbmFtZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gaTtcbiAgfSkuam9pbihcIiBcIik7XG59XG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5cblxudmFyIE5hdkxpbmsgPSBmb3J3YXJkUmVmJDEoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZiRhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWYkYXJpYUN1cnJlbnQgPT09IHZvaWQgMCA/IFwicGFnZVwiIDogX3JlZiRhcmlhQ3VycmVudCxcbiAgICAgIF9yZWYkYWN0aXZlQ2xhc3NOYW1lID0gX3JlZi5hY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9PT0gdm9pZCAwID8gXCJhY3RpdmVcIiA6IF9yZWYkYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxuICAgICAgY2xhc3NOYW1lUHJvcCA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgaXNBY3RpdmVQcm9wID0gX3JlZi5pc0FjdGl2ZSxcbiAgICAgIGxvY2F0aW9uUHJvcCA9IF9yZWYubG9jYXRpb24sXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdFxuICAgIH0pIDogbnVsbDtcbiAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbikgOiBtYXRjaCk7XG4gICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgdmFyIHN0eWxlID0gaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGVQcm9wLCB7fSwgYWN0aXZlU3R5bGUpIDogc3R5bGVQcm9wO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe1xuICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgc3R5bGU6IHN0eWxlLFxuICAgICAgdG86IHRvTG9jYXRpb25cbiAgICB9LCByZXN0KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSQxICE9PSBmb3J3YXJkUmVmJDEpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxuICB9KTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLWRvbS5qcy5tYXBcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5jb25zdCBMYXlvdXQgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPExpbmsgdG89XCIvXCI+XG4gICAgXHQ8aDE+66as7JWh7Yq466W8IOychO2VnCDsm7ntjKk0PC9oMT5cbiAgICAgIDwvTGluaz5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcbmV4cG9ydCBkZWZhdWx0IExheW91dDsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IExheW91dCBmcm9tICcuL0xheW91dCc7XG5jb25zdCBIb21lID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8cD7slYjrhZXtlZjshLjsmpQg66as7JWh7Yq466W8IOychO2VnCDsm7ntjKkuPC9wPlxuICAgICAgPHA+XG4gICAgICAgIDxMaW5rIHRvPVwiL2R5bmFtaWNcIj5EeW5hbWljIFBhZ2XroZwg7J2064+ZPC9MaW5rPlxuICAgICAgPC9wPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcbmV4cG9ydCBkZWZhdWx0IEhvbWU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExheW91dCBmcm9tICcuL0xheW91dCc7XG5jb25zdCBEeW5hbWljUGFnZSA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGgyPkR5bmFtaWMgUGFnZTwvaDI+XG4gICAgICA8cD7svZTrk5zsiqTtlIzrpr/tjIXsnYQg7J207Jqp7ZWcIOu5hOuPmeq4sO2OmOydtOyngOyeheuLiOuLpC48L3A+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuZXhwb3J0IGRlZmF1bHQgRHluYW1pY1BhZ2U7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi9MYXlvdXQnO1xuY29uc3QgTm9NYXRjaCA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPHN0cm9uZz7tjpjsnbTsp4Ag7JeG7Iq164uI64ukLjwvc3Ryb25nPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcbmV4cG9ydCBkZWZhdWx0IE5vTWF0Y2g7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN3aXRjaCwgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgSG9tZSBmcm9tICcuL0hvbWUnO1xuaW1wb3J0IER5bmFtaWNQYWdlIGZyb20gJy4vRHluYW1pY1BhZ2UnO1xuaW1wb3J0IE5vTWF0Y2ggZnJvbSAnLi9Ob01hdGNoJztcbmNvbnN0IEFwcCA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Um91dGVyPlxuICAgICAgPGRpdj5cbiAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9cIiBjb21wb25lbnQ9e0hvbWV9IC8+XG4gICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvZHluYW1pY1wiIGNvbXBvbmVudD17RHluYW1pY1BhZ2V9IC8+XG4gICAgICAgICAgPFJvdXRlIGNvbXBvbmVudD17Tm9NYXRjaH0gLz5cbiAgICAgICAgPC9Td2l0Y2g+XG4gICAgICA8L2Rpdj5cbiAgICA8L1JvdXRlcj5cbiAgKTtcbn07XG5leHBvcnQgZGVmYXVsdCBBcHA7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IEFwcCBmcm9tICcuL2NvbXBvbmVudHMvQXBwJztcblxuUmVhY3RET00ucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpOyJdLCJzb3VyY2VSb290IjoiIn0=